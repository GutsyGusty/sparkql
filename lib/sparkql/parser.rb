#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

# $Id$
module Sparkql
  class Parser < Racc::Parser

  include Sparkql::ParserTools
  include Sparkql::ParserCompatibility

##### State transition tables begin ###

racc_action_table = [
    23,    40,    41,    42,    38,    39,    31,    30,     8,    67,
     9,    68,    12,    13,    19,    23,    20,    21,    22,    24,
    25,    26,    27,    28,    29,     9,    88,    12,    13,    19,
    89,    20,    21,    22,    24,    25,    26,    27,    28,    23,
    40,    41,    42,    38,    39,    45,   104,     8,    48,     9,
   105,    12,    13,    19,    23,    20,    21,    22,    24,    25,
    26,    27,    28,    85,     9,    86,    12,    13,    19,    23,
    20,    21,    22,    24,    25,    26,    27,    28,    87,     9,
    68,    12,    13,    19,    23,    20,    21,    22,    24,    25,
    26,    27,    28,   nil,    46,    12,    13,    19,    19,    23,
    20,    21,    22,    24,    25,    26,    27,    28,   nil,    46,
    12,    13,    19,    23,   nil,    20,    21,    22,    24,    25,
    26,    27,    28,    46,    73,    12,    13,    19,    23,    20,
    21,    22,    24,    25,    26,    27,    28,   nil,    46,    82,
    83,    84,    19,    23,    20,    21,    22,    24,    25,    26,
    27,    28,   nil,    46,    82,    83,    84,    19,    23,    20,
    21,    22,    24,    25,    26,    27,    28,   nil,    46,    31,
    30,   nil,    19,    23,    20,    21,    22,    24,    25,    26,
    27,    28,   nil,    46,    32,    33,   nil,    19,    23,    20,
    21,    22,    24,    25,    26,    27,    28,   nil,    46,   nil,
   nil,   nil,    19,    23,    20,    21,    22,    24,    25,    26,
    27,    28,   nil,    46,    97,   nil,   nil,    23,   nil,    20,
    21,    22,    24,    25,    26,    27,    28,    46,   nil,    12,
    13,    19,    23,    20,    21,    22,    24,    25,    26,    27,
    28,   nil,    46,   nil,   nil,   nil,    23,   nil,    20,    21,
    22,    24,    25,    26,    27,    28,    46,    23,   nil,   nil,
   nil,   nil,    20,    21,    22,   nil,    23,    46,    40,    41,
    42,    38,    39,    20,    21,    22,    46,   nil,   nil,   nil,
    19,   nil,    20,    21,    22,    19,   nil,    65,    66,   nil,
    61,    62,    63,    19,   nil,    65,    66,   nil,    61,    62,
    63,    40,    41,    42,    38,    39,    82,    83,    84,    80,
    81 ]

racc_action_check = [
     0,    36,    36,    36,    36,    36,    35,    35,     0,    35,
     0,    36,     0,     0,     0,     8,     0,     0,     0,     0,
     0,     0,     0,     0,     1,     8,    74,     8,     8,     8,
    74,     8,     8,     8,     8,     8,     8,     8,     8,     9,
    10,    10,    10,    10,    10,    18,    98,     9,    29,     9,
    98,     9,     9,     9,    30,     9,     9,     9,     9,     9,
     9,     9,     9,    53,    30,    55,    30,    30,    30,    31,
    30,    30,    30,    30,    30,    30,    30,    30,    59,    31,
    79,    31,    31,    31,    32,    31,    31,    31,    31,    31,
    31,    31,    31,   nil,    32,    43,    43,    43,    32,    37,
    32,    32,    32,    32,    32,    32,    32,    32,   nil,    37,
    44,    44,    44,    45,   nil,    37,    37,    37,    37,    37,
    37,    37,    37,    45,    45,    45,    45,    45,    80,    45,
    45,    45,    45,    45,    45,    45,    45,   nil,    80,    90,
    90,    90,    80,    81,    80,    80,    80,    80,    80,    80,
    80,    80,   nil,    81,    91,    91,    91,    81,    82,    81,
    81,    81,    81,    81,    81,    81,    81,   nil,    82,     2,
     2,   nil,    82,    83,    82,    82,    82,    82,    82,    82,
    82,    82,   nil,    83,     6,     6,   nil,    83,    84,    83,
    83,    83,    83,    83,    83,    83,    83,   nil,    84,   nil,
   nil,   nil,    84,    86,    84,    84,    84,    84,    84,    84,
    84,    84,   nil,    86,    86,   nil,   nil,    89,   nil,    86,
    86,    86,    86,    86,    86,    86,    86,    89,   nil,    89,
    89,    89,   105,    89,    89,    89,    89,    89,    89,    89,
    89,   nil,   105,   nil,   nil,   nil,    23,   nil,   105,   105,
   105,   105,   105,   105,   105,   105,    23,    46,   nil,   nil,
   nil,   nil,    23,    23,    23,   nil,    85,    46,    14,    14,
    14,    14,    14,    46,    46,    46,    85,   nil,   nil,   nil,
    85,   nil,    85,    85,    85,    33,   nil,    33,    33,   nil,
    33,    33,    33,    87,   nil,    87,    87,   nil,    87,    87,
    87,    15,    15,    15,    15,    15,    51,    51,    51,    51,
    51 ]

racc_action_pointer = [
    -2,    24,   159,   nil,   nil,   nil,   176,   nil,    13,    37,
    37,   nil,   nil,   nil,   265,   298,   nil,   nil,    33,   nil,
   nil,   nil,   nil,   244,   nil,   nil,   nil,   nil,   nil,    48,
    52,    67,    82,   269,   nil,    -4,    -2,    97,   nil,   nil,
   nil,   nil,   nil,    81,    96,   111,   255,   nil,   nil,   nil,
   nil,   303,   nil,    46,   nil,    53,   nil,   nil,   nil,    61,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    13,   nil,   nil,   nil,   nil,    67,
   126,   141,   156,   171,   186,   264,   201,   277,   nil,   215,
   136,   151,   nil,   nil,   nil,   nil,   nil,   nil,    33,   nil,
   nil,   nil,   nil,   nil,   nil,   230,   nil ]

racc_action_default = [
    -2,   -72,    -1,    -3,    -4,    -5,   -72,    -8,   -72,   -72,
   -13,   -14,   -15,   -16,   -72,   -72,   -26,   -27,   -72,   -40,
   -55,   -56,   -57,   -72,   -60,   -61,   -62,   -63,   -64,   -72,
   -72,   -72,   -72,   -72,    -9,   -72,   -72,   -72,   -21,   -22,
   -23,   -24,   -25,   -72,   -72,   -72,   -72,   -59,   107,   -10,
   -11,    -6,   -28,   -29,   -30,   -72,   -50,   -51,    -7,   -72,
   -65,   -66,   -67,   -68,   -69,   -70,   -71,   -12,   -58,   -17,
   -19,   -18,   -20,   -36,   -72,   -41,   -43,   -44,   -45,   -72,
   -72,   -72,   -72,   -72,   -72,   -72,   -72,   -72,   -37,   -72,
   -31,   -32,   -33,   -34,   -35,   -52,   -53,   -38,   -72,   -46,
   -48,   -49,   -54,   -42,   -39,   -72,   -47 ]

racc_goto_table = [
    14,    64,    15,    59,    71,    72,    76,    75,    14,    14,
    15,    36,    51,    34,     2,    99,    37,    55,     1,    58,
    43,    74,    98,    35,   nil,    47,   nil,   nil,   nil,   nil,
    14,    14,    15,    15,   106,    49,    50,    69,   nil,    70,
   nil,   nil,   nil,   nil,   nil,    77,   nil,    78,    79,   nil,
    76,   103,   nil,    96,   nil,    64,   nil,   102,   nil,   nil,
    90,    91,    92,    93,    94,    55,    55,    55,    55,    55,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   100,    95,   101,    77,
   nil,    78,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   100,   nil,   101 ]

racc_goto_check = [
    14,    16,    15,    25,    10,    10,    10,    23,    14,    14,
    15,    15,     7,     3,     2,    24,    13,    19,     1,     8,
    13,    20,    22,     2,   nil,    15,   nil,   nil,   nil,   nil,
    14,    14,    15,    15,    24,     3,     3,    14,   nil,    15,
   nil,   nil,   nil,   nil,   nil,    14,   nil,    15,    15,   nil,
    10,    23,   nil,    16,   nil,    16,   nil,    25,   nil,   nil,
     7,     7,     7,     7,     7,    19,    19,    19,    19,    19,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    14,    15,    15,    14,
   nil,    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    14,   nil,    15 ]

racc_goto_pointer = [
   nil,    18,    14,     5,   nil,   nil,   nil,   -20,   -14,   nil,
   -39,   nil,   nil,     6,     0,     2,   -32,   nil,   nil,   -15,
   -24,   nil,   -64,   -38,   -71,   -30,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,   nil,   nil,     7,
    10,    11,    16,    44,    54,    56,    17,    52,    53,    18,
   nil,    57,   nil,   nil,   nil,   nil,    60 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 27, :_reduce_none,
  0, 27, :_reduce_2,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  3, 29, :_reduce_6,
  3, 29, :_reduce_7,
  1, 29, :_reduce_none,
  2, 31, :_reduce_9,
  3, 30, :_reduce_10,
  3, 30, :_reduce_11,
  3, 35, :_reduce_12,
  1, 32, :_reduce_none,
  1, 32, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  3, 37, :_reduce_17,
  3, 37, :_reduce_18,
  3, 37, :_reduce_19,
  3, 37, :_reduce_20,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_29,
  1, 33, :_reduce_none,
  3, 43, :_reduce_31,
  3, 43, :_reduce_32,
  3, 43, :_reduce_33,
  3, 43, :_reduce_34,
  3, 43, :_reduce_35,
  3, 42, :_reduce_36,
  4, 42, :_reduce_37,
  3, 47, :_reduce_38,
  4, 47, :_reduce_39,
  1, 45, :_reduce_none,
  1, 46, :_reduce_none,
  3, 46, :_reduce_42,
  1, 49, :_reduce_43,
  1, 49, :_reduce_none,
  1, 49, :_reduce_none,
  1, 48, :_reduce_none,
  3, 48, :_reduce_47,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  3, 44, :_reduce_52,
  3, 44, :_reduce_53,
  3, 34, :_reduce_54,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  3, 41, :_reduce_58,
  2, 41, :_reduce_59,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 51, :_reduce_none,
  1, 51, :_reduce_none,
  1, 51, :_reduce_none,
  1, 51, :_reduce_none,
  1, 51, :_reduce_none,
  1, 52, :_reduce_none,
  1, 52, :_reduce_none ]

racc_reduce_n = 72

racc_shift_n = 107

racc_token_table = {
  false => 0,
  :error => 1,
  :UMINUS => 2,
  :MUL => 3,
  :DIV => 4,
  :MOD => 5,
  :ADD => 6,
  :SUB => 7,
  :OPERATOR => 8,
  :RANGE_OPERATOR => 9,
  :UNARY_CONJUNCTION => 10,
  :CONJUNCTION => 11,
  :LPAREN => 12,
  :RPAREN => 13,
  :STANDARD_FIELD => 14,
  :CUSTOM_FIELD => 15,
  :KEYWORD => 16,
  :COMMA => 17,
  :INTEGER => 18,
  :DECIMAL => 19,
  :CHARACTER => 20,
  :DATE => 21,
  :DATETIME => 22,
  :TIME => 23,
  :BOOLEAN => 24,
  :NULL => 25 }

racc_nt_base = 26

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "UMINUS",
  "MUL",
  "DIV",
  "MOD",
  "ADD",
  "SUB",
  "OPERATOR",
  "RANGE_OPERATOR",
  "UNARY_CONJUNCTION",
  "CONJUNCTION",
  "LPAREN",
  "RPAREN",
  "STANDARD_FIELD",
  "CUSTOM_FIELD",
  "KEYWORD",
  "COMMA",
  "INTEGER",
  "DECIMAL",
  "CHARACTER",
  "DATE",
  "DATETIME",
  "TIME",
  "BOOLEAN",
  "NULL",
  "$start",
  "target",
  "expressions",
  "expression",
  "conjunction",
  "unary_conjunction",
  "field_expression",
  "condition",
  "range",
  "group",
  "field_function_expression",
  "arithmetic_expression",
  "field",
  "arithmetic",
  "literal",
  "literals",
  "function",
  "arithmetic_condition",
  "literal_list",
  "function_name",
  "function_args",
  "literal_function",
  "literal_function_args",
  "function_arg",
  "literal_function_arg",
  "rangeable",
  "numeric" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
 result = 0 
    result
end

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

def _reduce_6(val, _values, result)
 result = tokenize_expression(val[0], val[1],val[2]) 
    result
end

def _reduce_7(val, _values, result)
 result = tokenize_expression(val[0], val[1], val[2]) 
    result
end

# reduce 8 omitted

def _reduce_9(val, _values, result)
 result = tokenize_unary_conjunction(val[0], val[1]) 
    result
end

def _reduce_10(val, _values, result)
 result = tokenize_conjunction(val[0], val[1],val[2]) 
    result
end

def _reduce_11(val, _values, result)
 result = tokenize_conjunction(val[0], val[1],val[2]) 
    result
end

def _reduce_12(val, _values, result)
 result = tokenize_group(val[1]) 
    result
end

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

def _reduce_17(val, _values, result)
 result = tokenize_arithmetic(val[0], val[1], val[2]) 
    result
end

def _reduce_18(val, _values, result)
 result = tokenize_arithmetic(val[0], val[1], val[2]) 
    result
end

def _reduce_19(val, _values, result)
 result = tokenize_arithmetic(val[0], val[1], val[2]) 
    result
end

def _reduce_20(val, _values, result)
 result = tokenize_arithmetic(val[0], val[1], val[2]) 
    result
end

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

def _reduce_29(val, _values, result)
 result = tokenize_list(val[0]) 
    result
end

# reduce 30 omitted

def _reduce_31(val, _values, result)
 result = add_fold(val[0], val[2]) 
    result
end

def _reduce_32(val, _values, result)
 result = sub_fold(val[0], val[2]) 
    result
end

def _reduce_33(val, _values, result)
 result = mul_fold(val[0], val[2]) 
    result
end

def _reduce_34(val, _values, result)
 result = div_fold(val[0], val[2]) 
    result
end

def _reduce_35(val, _values, result)
 result = mod_fold(val[0], val[2]) 
    result
end

def _reduce_36(val, _values, result)
 result = tokenize_function(val[0], []) 
    result
end

def _reduce_37(val, _values, result)
 result = tokenize_function(val[0], val[2]) 
    result
end

def _reduce_38(val, _values, result)
 result = tokenize_function(val[0], []) 
    result
end

def _reduce_39(val, _values, result)
 result = tokenize_function(val[0], val[2]) 
    result
end

# reduce 40 omitted

# reduce 41 omitted

def _reduce_42(val, _values, result)
 result = tokenize_function_args(val[0], val[2]) 
    result
end

def _reduce_43(val, _values, result)
 result = tokenize_field_arg(val[0]) 
    result
end

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

def _reduce_47(val, _values, result)
 result = tokenize_function_args(val[0], val[2]) 
    result
end

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

def _reduce_52(val, _values, result)
 result = tokenize_multiple(val[0], val[2]) 
    result
end

def _reduce_53(val, _values, result)
 result = tokenize_multiple(val[0], val[2]) 
    result
end

def _reduce_54(val, _values, result)
 result = tokenize_multiple(val[0], val[2]) 
    result
end

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

def _reduce_58(val, _values, result)
 result = val[1] 
    result
end

def _reduce_59(val, _values, result)
 result = tokenize_literal_negation(val[1]) 
    result
end

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Sparkql


# END PARSER
