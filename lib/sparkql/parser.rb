#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'

# $Id$
module Sparkql
  class Parser < Racc::Parser

  include Sparkql::ParserTools
  include Sparkql::ParserCompatibility
  
##### State transition tables begin ###

racc_action_table = [
    45,     5,    13,     6,     7,    15,    17,    18,    20,    21,
    22,    24,    28,    14,    15,    17,    18,    20,    21,    22,
    24,    15,    17,    18,    20,    21,    22,    24,    29,    30,
    49,    32,    34,    38,    48,    29,    30,    36,    32,    34,
     5,    39,     6,     7,     5,    40,     6,     7,    15,    17,
    18,    14,   nil,    35,    10,    11 ]

racc_action_check = [
    39,    14,     8,    14,    14,    39,    39,    39,    39,    39,
    39,    39,    10,     9,    10,    10,    10,    10,    10,    10,
    10,    48,    48,    48,    48,    48,    48,    48,    11,    11,
    46,    11,    11,    25,    46,    40,    40,    13,    40,    40,
     0,    27,     0,     0,     5,    31,     5,     5,    38,    38,
    38,    12,   nil,    12,     3,     3 ]

racc_action_pointer = [
    34,   nil,   nil,    51,   nil,    38,   nil,   nil,     2,     8,
     2,    16,    46,    37,    -5,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    22,   nil,    35,   nil,   nil,
   nil,    34,   nil,   nil,   nil,   nil,   nil,   nil,    36,    -7,
    23,   nil,   nil,   nil,   nil,   nil,    23,   nil,     9,   nil,
   nil ]

racc_action_default = [
    -2,    -3,    -4,   -36,    -7,   -36,   -10,   -11,   -36,    -1,
   -36,   -36,   -36,   -36,   -36,   -25,   -22,   -26,   -27,    -5,
   -28,   -29,   -30,   -12,   -31,   -13,   -14,   -36,   -17,   -32,
   -33,   -36,   -34,    -6,   -35,    -9,    51,    -8,   -36,   -36,
   -36,   -23,   -18,   -21,   -20,   -15,   -36,   -24,   -36,   -16,
   -19 ]

racc_goto_table = [
    31,    42,    16,     9,    25,    23,    33,    26,    12,    27,
    50,    46,    19,    37,     8,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,
    41 ]

racc_goto_check = [
    16,    14,    15,     2,    10,     9,     7,    11,     2,    12,
    14,    13,     6,     3,     1,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,
    15 ]

racc_goto_pointer = [
   nil,    14,     3,    -1,   nil,   nil,     2,    -5,   nil,    -5,
    -6,    -3,    -1,   -28,   -38,    -8,   -11 ]

racc_goto_default = [
   nil,   nil,   nil,     1,     2,     3,   nil,   nil,     4,    44,
   nil,   nil,   nil,   nil,   nil,    43,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 20, :_reduce_none,
  0, 20, :_reduce_2,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  3, 22, :_reduce_5,
  3, 22, :_reduce_6,
  1, 22, :_reduce_none,
  3, 23, :_reduce_8,
  3, 27, :_reduce_9,
  1, 24, :_reduce_none,
  1, 24, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  3, 30, :_reduce_15,
  4, 30, :_reduce_16,
  1, 31, :_reduce_none,
  1, 32, :_reduce_none,
  3, 32, :_reduce_19,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 29, :_reduce_none,
  3, 29, :_reduce_23,
  3, 26, :_reduce_24,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none ]

racc_reduce_n = 36

racc_shift_n = 51

racc_token_table = {
  false => 0,
  :error => 1,
  :UMINUS => 2,
  :OPERATOR => 3,
  :RANGE_OPERATOR => 4,
  :CONJUNCTION => 5,
  :LPAREN => 6,
  :RPAREN => 7,
  :STANDARD_FIELD => 8,
  :CUSTOM_FIELD => 9,
  :KEYWORD => 10,
  :COMMA => 11,
  :INTEGER => 12,
  :DECIMAL => 13,
  :CHARACTER => 14,
  :DATE => 15,
  :DATETIME => 16,
  :BOOLEAN => 17,
  :NULL => 18 }

racc_nt_base = 19

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "UMINUS",
  "OPERATOR",
  "RANGE_OPERATOR",
  "CONJUNCTION",
  "LPAREN",
  "RPAREN",
  "STANDARD_FIELD",
  "CUSTOM_FIELD",
  "KEYWORD",
  "COMMA",
  "INTEGER",
  "DECIMAL",
  "CHARACTER",
  "DATE",
  "DATETIME",
  "BOOLEAN",
  "NULL",
  "$start",
  "target",
  "expressions",
  "expression",
  "conjunction",
  "field",
  "condition",
  "range",
  "group",
  "literal",
  "literal_list",
  "function",
  "function_name",
  "function_args",
  "function_arg",
  "literals",
  "rangeable" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
 result = 0 
    result
end

# reduce 3 omitted

# reduce 4 omitted

def _reduce_5(val, _values, result)
 result = tokenize_expression(val[0], val[1],val[2]) 
    result
end

def _reduce_6(val, _values, result)
 result = tokenize_expression(val[0], val[1], val[2]) 
    result
end

# reduce 7 omitted

def _reduce_8(val, _values, result)
 result = tokenize_conjunction(val[0], val[1],val[2]) 
    result
end

def _reduce_9(val, _values, result)
 result = tokenize_group(val[1]) 
    result
end

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

def _reduce_15(val, _values, result)
 result = tokenize_function(val[0], []) 
    result
end

def _reduce_16(val, _values, result)
 result = tokenize_function(val[0], val[2]) 
    result
end

# reduce 17 omitted

# reduce 18 omitted

def _reduce_19(val, _values, result)
 result = tokenize_function_args(val[0], val[2]) 
    result
end

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

def _reduce_23(val, _values, result)
 result = tokenize_multiple(val[0], val[2]) 
    result
end

def _reduce_24(val, _values, result)
 result = tokenize_multiple(val[0], val[2]) 
    result
end

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Sparkql


# END PARSER
